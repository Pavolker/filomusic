!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rádio Dial Interativo</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            display: flex;
            justify-content: center;
            align-items: center;
            min-height: 100vh;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            overflow: hidden;
        }

        .radio-container {
            background: linear-gradient(145deg, #2d3436, #1e272e);
            border-radius: 40px;
            padding: 40px;
            box-shadow: 
                0 20px 60px rgba(0, 0, 0, 0.8),
                inset 0 1px 0 rgba(255, 255, 255, 0.1);
            width: 90%;
            max-width: 500px;
            animation: float 3s ease-in-out infinite;
        }

        @keyframes float {
            0%, 100% { transform: translateY(0px); }
            50% { transform: translateY(-10px); }
        }

        /* Header */
        .radio-header {
            text-align: center;
            margin-bottom: 30px;
            color: #fff;
        }

        .radio-title {
            font-size: 28px;
            font-weight: bold;
            margin-bottom: 10px;
            background: linear-gradient(135deg, #667eea, #764ba2);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .radio-subtitle {
            font-size: 12px;
            color: #aaa;
            text-transform: uppercase;
            letter-spacing: 2px;
        }

        /* Display Digital */
        .display-panel {
            background: linear-gradient(145deg, #1a1a1a, #0f0f0f);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            border: 2px solid #667eea;
            box-shadow: 
                inset 0 2px 5px rgba(0, 0, 0, 0.8),
                0 0 15px rgba(102, 126, 234, 0.3);
            text-align: center;
        }

        .frequency-display {
            font-size: 36px;
            font-weight: bold;
            color: #00ff88;
            font-family: 'Courier New', monospace;
            letter-spacing: 3px;
            text-shadow: 0 0 10px rgba(0, 255, 136, 0.8);
            margin-bottom: 8px;
        }

        .station-name {
            font-size: 14px;
            color: #667eea;
            text-transform: uppercase;
            letter-spacing: 1px;
            min-height: 20px;
        }

        /* Dial Container */
        .dial-wrapper {
            display: flex;
            justify-content: center;
            align-items: center;
            margin-bottom: 30px;
            perspective: 1000px;
        }

        .dial-container {
            position: relative;
            width: 280px;
            height: 280px;
            border-radius: 50%;
            background: radial-gradient(circle at 30% 30%, #555, #1a1a1a);
            box-shadow: 
                0 20px 50px rgba(0, 0, 0, 0.8),
                inset 0 2px 5px rgba(255, 255, 255, 0.1),
                inset 0 -5px 15px rgba(0, 0, 0, 0.9);
            border: 3px solid #333;
            cursor: grab;
            transition: transform 0.1s ease-out;
            user-select: none;
        }

        .dial-container:active {
            cursor: grabbing;
            transform: scale(0.98);
        }

        /* Marcas no Dial */
        .dial-marks {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
        }

        .mark {
            position: absolute;
            left: 50%;
            width: 2px;
            background: #666;
            transform-origin: 0 140px;
            margin-left: -1px;
        }

        .mark.major {
            height: 20px;
            background: #aaa;
            width: 3px;
            margin-left: -1.5px;
        }

        .mark.major::after {
            content: attr(data-freq);
            position: absolute;
            top: -35px;
            left: 50%;
            transform: translateX(-50%);
            font-size: 11px;
            color: #888;
            white-space: nowrap;
            font-weight: bold;
        }

        /* Números do Dial */
        .dial-numbers {
            position: absolute;
            width: 100%;
            height: 100%;
            border-radius: 50%;
        }

        .number {
            position: absolute;
            font-size: 12px;
            font-weight: bold;
            color: #999;
            width: 30px;
            height: 30px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        /* Agulha/Ponteiro */
        .needle {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 4px;
            height: 120px;
            background: linear-gradient(to top, #ff6b6b, #ff8e8e);
            border-radius: 2px;
            transform-origin: center 100%;
            transform: translate(-50%, -100%) rotate(0deg);
            z-index: 10;
            box-shadow: 0 0 8px rgba(255, 107, 107, 0.8);
            transition: transform 0.3s cubic-bezier(0.34, 1.56, 0.64, 1);
        }

        .needle::before {
            content: '';
            position: absolute;
            top: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 8px;
            height: 8px;
            background: #ff6b6b;
            border-radius: 50%;
            box-shadow: 0 0 5px rgba(255, 107, 107, 0.9);
        }

        /* Centro do Dial */
        .dial-center {
            position: absolute;
            top: 50%;
            left: 50%;
            width: 20px;
            height: 20px;
            background: radial-gradient(circle at 30% 30%, #667eea, #764ba2);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            z-index: 11;
            box-shadow: 
                0 0 10px rgba(102, 126, 234, 0.8),
                inset 0 2px 5px rgba(0, 0, 0, 0.5);
        }

        .dial-center::after {
            content: '';
            position: absolute;
            width: 6px;
            height: 6px;
            background: #fff;
            border-radius: 50%;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            opacity: 0.8;
        }

        /* Controles */
        .controls {
            display: flex;
            justify-content: space-around;
            align-items: center;
            margin-bottom: 20px;
            gap: 10px;
        }

        .control-btn {
            background: linear-gradient(145deg, #667eea, #764ba2);
            border: none;
            color: white;
            width: 50px;
            height: 50px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 20px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.3s ease;
            box-shadow: 0 5px 15px rgba(102, 126, 234, 0.4);
        }

        .control-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.6);
        }

        .control-btn:active {
            transform: translateY(0);
        }

        .power-btn {
            width: 60px;
            height: 60px;
            background: linear-gradient(145deg, #ff6b6b, #ff8e8e);
            font-size: 24px;
        }

        .power-btn.on {
            box-shadow: 0 0 20px rgba(255, 107, 107, 0.8);
        }

        /* Estações Predefinidas */
        .presets {
            display: grid;
            grid-template-columns: repeat(3, 1fr);
            gap: 8px;
            margin-bottom: 20px;
        }

        .preset-btn {
            background: linear-gradient(145deg, #333, #1a1a1a);
            border: 2px solid #444;
            color: #aaa;
            padding: 10px;
            border-radius: 8px;
            cursor: pointer;
            font-size: 12px;
            font-weight: bold;
            transition: all 0.3s ease;
            text-transform: uppercase;
        }

        .preset-btn:hover {
            border-color: #667eea;
            color: #667eea;
        }

        .preset-btn.active {
            background: linear-gradient(145deg, #667eea, #764ba2);
            border-color: #667eea;
            color: white;
            box-shadow: 0 0 10px rgba(102, 126, 234, 0.6);
        }

        /* Volume Slider */
        .volume-section {
            display: flex;
            align-items: center;
            gap: 10px;
            padding: 15px;
            background: rgba(102, 126, 234, 0.1);
            border-radius: 10px;
            border: 1px solid rgba(102, 126, 234, 0.2);
        }

        .volume-icon {
            font-size: 20px;
            color: #667eea;
        }

        .volume-slider {
            flex: 1;
            height: 6px;
            -webkit-appearance: none;
            appearance: none;
            background: linear-gradient(to right, #667eea, #764ba2);
            border-radius: 3px;
            outline: none;
            cursor: pointer;
        }

        .volume-slider::-webkit-slider-thumb {
            -webkit-appearance: none;
            appearance: none;
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: linear-gradient(145deg, #667eea, #764ba2);
            cursor: pointer;
            box-shadow: 0 0 8px rgba(102, 126, 234, 0.6);
        }

        .volume-slider::-moz-range-thumb {
            width: 18px;
            height: 18px;
            border-radius: 50%;
            background: linear-gradient(145deg, #667eea, #764ba2);
            cursor: pointer;
            border: none;
            box-shadow: 0 0 8px rgba(102, 126, 234, 0.6);
        }

        .volume-value {
            color: #667eea;
            font-weight: bold;
            min-width: 30px;
            text-align: right;
            font-size: 12px;
        }

        /* Responsive */
        @media (max-width: 600px) {
            .radio-container {
                padding: 30px;
            }

            .dial-container {
                width: 220px;
                height: 220px;
            }

            .needle {
                height: 95px;
            }

            .frequency-display {
                font-size: 28px;
            }
        }
    </style>
</head>
<body>
    <div class="radio-container">
        <div class="radio-header">
            <div class="radio-title">📻 RADIO DIAL</div>
            <div class="radio-subtitle">AM/FM Interactive</div>
        </div>

        <div class="display-panel">
            <div class="frequency-display" id="frequency">88.5</div>
            <div class="station-name" id="stationName">Buscando...</div>
        </div>

        <div class="presets">
            <button class="preset-btn" data-freq="87.9">News</button>
            <button class="preset-btn" data-freq="92.3">Music</button>
            <button class="preset-btn" data-freq="98.1">Rock</button>
            <button class="preset-btn" data-freq="103.5">Pop</button>
            <button class="preset-btn" data-freq="107.9">Jazz</button>
            <button class="preset-btn" data-freq="97.5">Hits</button>
        </presets>

        <div class="dial-wrapper">
            <div class="dial-container" id="dialContainer">
                <div class="dial-marks" id="dialMarks"></div>
                <div class="dial-numbers" id="dialNumbers"></div>
                <div class="needle" id="needle"></div>
                <div class="dial-center"></div>
            </div>
        </div>

        <div class="controls">
            <button class="control-btn" id="prevBtn">◀</button>
            <button class="control-btn power-btn on" id="powerBtn">⚡</button>
            <button class="control-btn" id="nextBtn">▶</button>
        </div>

        <div class="volume-section">
            <div class="volume-icon">🔊</div>
            <input type="range" min="0" max="100" value="70" class="volume-slider" id="volumeSlider">
            <div class="volume-value" id="volumeValue">70</div>
        </div>
    </div>

    <script>
        const stations = {
            87.9: { name: '🗞️ News Radio', genre: 'Notícias' },
            88.5: { name: '🎵 Classic Hits', genre: 'Clássicos' },
            92.3: { name: '🎸 Music FM', genre: 'Música' },
            97.5: { name: '🌟 Best Hits', genre: 'Hits' },
            98.1: { name: '🎸 Rock Station', genre: 'Rock' },
            103.5: { name: '🎤 Pop Culture', genre: 'Pop' },
            107.9: { name: '🎷 Jazz Radio', genre: 'Jazz' }
        };

        let currentFrequency = 88.5;
        let isDragging = false;
        let isOn = true;

        const dialContainer = document.getElementById('dialContainer');
        const needle = document.getElementById('needle');
        const frequencyDisplay = document.getElementById('frequency');
        const stationName = document.getElementById('stationName');
        const powerBtn = document.getElementById('powerBtn');
        const volumeSlider = document.getElementById('volumeSlider');
        const volumeValue = document.getElementById('volumeValue');
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const presetBtns = document.querySelectorAll('.preset-btn');

        // Criar marcas no dial
        function createDialMarks() {
            const dialMarks = document.getElementById('dialMarks');
            const markCount = 120;
            
            for (let i = 0; i < markCount; i++) {
                const mark = document.createElement('div');
                mark.className = i % 10 === 0 ? 'mark major' : 'mark';
                const rotation = (i / markCount) * 360 - 90;
                mark.style.transform = `rotate(${rotation}deg)`;
                
                if (i % 10 === 0) {
                    const freq = (87.5 + (i / 10) * 2).toFixed(1);
                    mark.setAttribute('data-freq', freq);
                }
                
                dialMarks.appendChild(mark);
            }
        }

        // Criar números do dial
        function createDialNumbers() {
            const dialNumbers = document.getElementById('dialNumbers');
            const numbers = [87.5, 89.5, 91.5, 93.5, 95.5, 97.5, 99.5, 101.5, 103.5, 105.5, 107.5, 109.5];
            
            numbers.forEach((num, index) => {
                const angle = (index / numbers.length) * 360 - 90;
                const radius = 115;
                const x = Math.cos(angle * Math.PI / 180) * radius;
                const y = Math.sin(angle * Math.PI / 180) * radius;
                
                const number = document.createElement('div');
                number.className = 'number';
                number.textContent = num;
                number.style.left = `calc(50% + ${x}px - 15px)`;
                number.style.top = `calc(50% + ${y}px - 15px)`;
                
                dialNumbers.appendChild(number);
            });
        }

        // Atualizar display
        function updateDisplay() {
            frequencyDisplay.textContent = currentFrequency.toFixed(1);
            
            const station = stations[currentFrequency.toFixed(1)] || { name: 'Sem sinal', genre: 'Buscando...' };
            stationName.textContent = station.name;
            
            updateNeedle();
            updatePresetButtons();
        }

        // Atualizar posição da agulha
        function updateNeedle() {
            const minFreq = 87.5;
            const maxFreq = 109.5;
            const percentage = (currentFrequency - minFreq) / (maxFreq - minFreq);
            const rotation = percentage * 240 - 120;
            needle.style.transform = `translate(-50%, -100%) rotate(${rotation}deg)`;
        }

        // Atualizar botões de preset
        function updatePresetButtons() {
            presetBtns.forEach(btn => {
                const freq = parseFloat(btn.getAttribute('data-freq'));
                btn.classList.toggle('active', Math.abs(freq - currentFrequency) < 0.1);
            });
        }

        // Capturar movimento do mouse/touch no dial
        dialContainer.addEventListener('mousedown', () => { isDragging = true; });
        dialContainer.addEventListener('touchstart', () => { isDragging = true; });
        
        document.addEventListener('mouseup', () => { isDragging = false; });
        document.addEventListener('touchend', () => { isDragging = false; });

        // Calcular frequência baseado na posição do mouse/touch
        function getFrequencyFromPosition(event) {
            const rect = dialContainer.getBoundingClientRect();
            const centerX = rect.left + rect.width / 2;
            const centerY = rect.top + rect.height / 2;
            
            const clientX = event.clientX || event.touches?.[0].clientX || 0;
            const clientY = event.clientY || event.touches?.[0].clientY || 0;
            
            let angle = Math.atan2(clientY - centerY, clientX - centerX) * 180 / Math.PI + 90;
            if (angle < 0) angle += 360;
            
            const normalized = (angle + 120) / 240;
            let freq = 87.5 + normalized * (109.5 - 87.5);
            
            freq = Math.max(87.5, Math.min(109.5, freq));
            return Math.round(freq * 10) / 10;
        }

        // Evento de movimento
        document.addEventListener('mousemove', (e) => {
            if (isDragging && isOn) {
                currentFrequency = getFrequencyFromPosition(e);
                updateDisplay();
            }
        });

        document.addEventListener('touchmove', (e) => {
            if (isDragging && isOn) {
                currentFrequency = getFrequencyFromPosition(e);
                updateDisplay();
            }
        });

        // Botão Power
        powerBtn.addEventListener('click', () => {
            isOn = !isOn;
            powerBtn.classList.toggle('on');
            dialContainer.style.opacity = isOn ? '1' : '0.5';
            dialContainer.style.pointerEvents = isOn ? 'auto' : 'none';
            if (!isOn) stationName.textContent = 'Desligado';
        });

        // Botões de navegação
        prevBtn.addEventListener('click', () => {
            if (isOn) {
                currentFrequency = Math.max(87.5, currentFrequency - 0.2);
                updateDisplay();
            }
        });

        nextBtn.addEventListener('click', () => {
            if (isOn) {
                currentFrequency = Math.min(109.5, currentFrequency + 0.2);
                updateDisplay();
            }
        });

        // Botões de preset
        presetBtns.forEach(btn => {
            btn.addEventListener('click', () => {
                if (isOn) {
                    currentFrequency = parseFloat(btn.getAttribute('data-freq'));
                    updateDisplay();
                }
            });
        });

        // Volume slider
        volumeSlider.addEventListener('input', (e) => {
            volumeValue.textContent = e.target.value;
        });

        // Inicializar
        createDialMarks();
        createDialNumbers();
        updateDisplay();
    </script>
</body>
</html>